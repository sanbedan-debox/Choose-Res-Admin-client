# import "./fragments.graphql"

query AllPlaces($input: String!) {
  getPlacesList(input: $input) {
    placeId
    displayName
  }
}

query PlaceDetails($placeId: String!) {
  getPlaceDetails(placeId: $placeId) {
    latitude
    longitude
  }
}

# Mutation to update user onboarding details
mutation businessOnboarding($input: BusinessDetailsInput!) {
  businessOnboarding(input: $input)
}

# Inputs

mutation completeBusinessOnboarding {
  completeBusinessOnboarding
}

# Object types

# Response for adding a restaurant user
type AddRestaurantUser {
  emailOtpVerifyKey: String!
  numberOtpVerifyKey: String!
}

query businessOnboardingDetails {
  businessOnboardingDetails {
    ein
    businessName
    address {
      ...addressInfo
    }
    employeeSize

    businessType
    estimatedRevenue
  }
}

mutation restaurantOnboarding($input: UpdateRestaurantDetailsInput!) {
  restaurantOnboarding(input: $input)
}

query completeRestaurantOnboarding {
  completeRestaurantOnboarding
}
# Input for adding a new restaurant user
input AddRestaurantUserInput {
  name: String!
  email: String!
  phone: String!
  communication: CommunicationPreferenceInput!
}

# Input for verifying restaurant user details
input VerifyRestaurantUserDetails {
  email: String!
  phone: String!
  emailOtp: String!
  numberOtp: String!
  emailOtpVerifyKey: String!
  numberOtpVerifyKey: String!
  name: String!
  communication: CommunicationPreferenceInput!
}

# Input for communication preferences
input CommunicationPreferenceInput {
  whatsApp: Boolean!
  email: Boolean!
}

type Mutation {
  createRestaurantUser(input: AddRestaurantUserInput!): AddRestaurantUser
  verifyRestaurantUserDetails(input: VerifyRestaurantUserDetails!): Boolean
}

query restaurantOnboardingData {
  restaurantOnboardingData {
    name
    address {
      ...addressInfo
    }
    brandingLogo
    socialInfo {
      facebook
      instagram
      twitter
    }
    website
    availability {
      day
      hours {
        start
        end
      }
      active
    }
    timezone {
      timezoneId
      timezoneName
    }
    category
    beverageCategory
    foodType
    meatType
    type
    dineInCapacity
  }
}

query meUserInResOnboarding {
  meUser {
    status
  }
}
